--각 직원의 이름과 부서 이름을 출력. (부서 번호 대신 부서 이름)
SELECT E.ENAME, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY D.DNAME;

--각 직원의 이름과 해당 직원의 급여를 조회하되, 급여가 부서 평균 급여보다 높은 경우에는 "상위"라고 표시하고 그 외에는 "일반"이라고 출력
SELECT E1.ENAME, 
CASE
    WHEN E1.SAL > E2.AVG_SAL AND E1.DEPTNO = E2.DEPTNO THEN CONCAT('상위 : ', E1.SAL)
    ELSE CONCAT('일반 : ', E1.SAL)
    END AS SAL, E1.DEPTNO
FROM EMP E1, (SELECT ROUND(AVG(SAL)) AS AVG_SAL, DEPTNO FROM EMP GROUP BY DEPTNO) E2
WHERE E1.DEPTNO = E2.DEPTNO
ORDER BY DEPTNO;

--각 부서별로 속한 직원의 수와 평균 급여를 조회하되,
--급여가 해당 부서의 평균 급여보다 높은 직원의 이름과 급여를 함께 출력(평균 급여 내림차순으로 정렬)
SELECT DEPTNO, COUNT(*) AS EMP_COUNT, ROUND(AVG(SAL)) AS AVER_SAL FROM EMP GROUP BY DEPTNO;

SELECT E1.ENAME, E1.SAL, E2.DEPTNO
FROM EMP E1, (SELECT ROUND(AVG(SAL)) AS AVG_SAL, DEPTNO FROM EMP GROUP BY DEPTNO) E2
WHERE E1.SAL > E2.AVG_SAL AND E1.DEPTNO = E2.DEPTNO;

WITH A AS(SELECT DEPTNO, COUNT(*) AS EMP_COUNT, ROUND(AVG(SAL)) AS AVER_SAL FROM EMP GROUP BY DEPTNO),
     B AS (SELECT E1.ENAME, E1.SAL, E1.DEPTNO
           FROM EMP E1, (SELECT ROUND(AVG(SAL)) AS AVG_SAL, DEPTNO FROM EMP GROUP BY DEPTNO) E2
           WHERE E1.SAL > E2.AVG_SAL AND E1.DEPTNO = E2.DEPTNO)
SELECT A.DEPTNO, A.EMP_COUNT, A.AVER_SAL, B.ENAME, B.SAL
FROM A
JOIN B ON A.DEPTNO = B.DEPTNO
ORDER BY A.AVER_SAL DESC;

--각 직원의 이름과 보너스를 조회하되, 보너스가 없는 직원들 중에서 가장 급여가 높은 직원의 이름과 급여를 출력
SELECT ENAME, SAL
FROM EMP
WHERE COMM IS NULL AND SAL = (SELECT MAX(SAL) FROM EMP WHERE COMM IS NULL);

SELECT
    ENAME, COMM,
    CASE
        WHEN COMM IS NULL AND SAL = (SELECT MAX(SAL) FROM EMP WHERE COMM IS NULL) THEN SAL
    END AS MAX_SAL
FROM EMP
ORDER BY MAX_SAL;