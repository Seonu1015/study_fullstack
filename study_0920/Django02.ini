- Admin 사이트

+ 관리자 사이트 URL 변경
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('내가원하는걸로/admin/', admin.site.urls),
]

+ 모델 관리 화면 커스터마이징 (ModelAdmin 클래스)
list_display : 리스트 페이지에서 표시할 필드들을 지정한다.
from django.contrib import admin
from .models import NewModel

class NewModelAdmin(admin.ModelAdmin):
    list_display = ('field1', 'field2', 'field3', ...)

admin.site.register(NewModel, NewModelAdmin)

list_filter : 리스트 페이지에 필터 사이드바를 추가하고 해당 필드로 필터링할 수 있다.
class NewModelAdmin(admin.ModelAdmin):
    list_filter = ('field1', 'field2', ...) # 일부분만 필터 사이드바 추가 가능

search_fields : 검색 기능을 제공한다.
class NewModelAdmin(admin.ModelAdmin):
    seach_fields = ('field1', ...)

fields, fieldsets : 상세 페이지에서 표시할 필드들의 순서와 그룹화 방식을 정의한다.
fields : 각각의 필드를 개별적으로 나열하여 순서대로 표시한다.
class NewModelAdmin(admin.ModelAdmin):
    fields = ('field1', 'field2', ...)

fieldsets : 관련된 필드들을 그룹화한다.
class NewModelAdmin(admin.ModelAdmin):
    fieldsets = (
        ('Group1', {
            'fields' : ('field1', 'field2' ...)
        }),
        ('Group2', {
            'fields' : ('field3', 'field4', ...)
        })
    )

date_hierarchy : 날짜 계층 구조(navigation)을 생성하여 날짜 기반으로 탐색 기능을 제공한다.
class NewModelAdmin(admin.ModelAdmin):
    date_hierarchy = 'created_at'

prepopulated_fields : 다른 필드 값을 기반으로 자동으로 값 채우기
actions : 선택된 객체들에 대해 일괄 작업을 사용 가능하게
ordering : 정렬 순서 설정
