- 액션 태그
JSP 액션 태그는 JSP 페이지에서 작업을 수행하는 XML 스타일 태그다.

+ jsp:include : 현재 JSP 페이지에 다른 리소스를 동적으로 포함
<jsp:include page="head.jsp" />

+ jsp:forward : 요청을 다른 리소스로 전달하거나 리다이렉트한다.
<jsp:forward page="nextPage.jsp" />

+ jsp:param : include, forward 등의 부모태그와 함께 사용하기 위한 쿼리 문자열을 추가할 수 있다.
<jsp:include page="nextPage.jsp">
    <jsp:param name="studentId" value="Adam"/>
</jsp:include>

+ 자바 빈(Java Bean) : 스프링 컨테이너가 관리하는 재사용 가능한 컴포넌트
jsp:useBean, jsp:setProperty, jsp:getProperty 빈 객체를 생성하고 속성 관리를 한다.
<jsp:useBean id="newBean" class="com.examle.NewBean"/>
<jsp:setProperty name="newBean" property="*" />

<jsp:getProperty name="newBean" property="name"/>

+ <jsp:text> : CDATA라는 섹션을 정의. 내부 텍스트는 파싱되지 않는다.
+ <jsp:fallback> : 플로그인 액션이 실패할 때 처리할 내용
+ <jsp:params> : 여러 개의 <jsp:param> 태그를 그룹화하는데 사용한다.

- 커스텀 태그
개발자가 직접 정의하여 사용하는 JSP 태그는

1) 태그 핸들러 클래스 작성 : 태그의 기능을 구현하는 자바 클래스를 작성
javax.servlet.jsp.tagext.Tag 인터페이스 혹은 javax.servlet.jsp.tagext.BodyTag 인터페이스를 구현해야 한다.

2) 태그 라이브러리 디스크립터(TLD) 파일 생성 : TLD 파일을 XML 형식으로 태그 핸들러, 클래스에 대한 정보를 담고 있다.

3) JSP 페이지에서 커스텀 태크 사용 : <%@ taglib %> 지시어를 사용하여 TLD 파일을 참조한다.

public class SimpleTagHandler extends SimpleTagSupport {
    @Override
    public void doTag() throws JspException, IOException {
        JspWriter out = getJspContext().getOut();
        out.println("Hello World");
    }
}

+ mytags.tld TLD 파일 생성
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLoation="http://java.sun.com/xml/ns/j2ee
                           http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">
    <tlib-version>1.0</tlib-version>
    <short-name>mytags</short-name>
    <uri>http://www.example.com/mytags</uri>

    <tag>
        <name>hello</name>
        <tag-class>com.example.SimpleTagHandler</tag-class>
        <body-content>empty</body-content>
    </tag>
</taglib>

+ JSP에서 커스텀 태그 사용
<%@ taglib prefix="my" uri="http://www.example.com/mytags" %>
<%@ taglib prefix="my" tagdir="/WEB-INF/폴더명" %>

<my:hello/>

- JSTL(JSP Standard Tag Library) : 커스텀 태그의 집합
<c: tagName> 형태로 사용되며 XML 스타일의 문법을 가진다.

<%@ taglib prefix="c" uri="http://www.java.sun.com/jsp/jstl/core" %>

<c:forEach var="item" items="${list}">
    ${item}<br>
</c:forEach>

- EL(Expression Language) : 표현식 언어, 자바 객체에 쉽게 접근 가능
${expression} 형태로 주로 변수 값에 접근하거나 출력하는데 사용

Hello, ${sessionScope.user.name}

