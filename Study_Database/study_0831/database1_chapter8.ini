조인
두 개 이상의 테이브을 열 기준으로 결합해주는 SQL 연산이다. 일반적으로 공통된 열을 기준으로 작업을 한다.
일치하지 않는 경우는 NULL을 반환한다.

1. INNER JOIN : 두 테이블에서 일치하는 행 출력 (L ∩ R)
INNER JOIN DEPT ON DEPT.DEPTNO = EMP.DEPTNO

2. LEFT OUTER JOIN : 첫 번째 테이블의 모든 행 그리고 두 번째 테이블과 일치하는 행 출력 (L)

3. RIGHT OUTER JOIN : 두 번째 테이블의 모든 행 그리고 첫 번째 테이블과 일치하는 행 출력 (R)

4. FULL OUTER JOIN : 두 개의 모든 데이터를 가져와서 한 쌍으로 만들고 전체 데이터 출력 (L ∪ R)

L - L ∩ R
FROM L
LEFT OUTER JOIN R ON L.VALUE = R.VALUE
WHERE R.VALUE IS NULL

R - L ∩ R
FROM R
RIGHT OUTER JOIN L ON L.VALUE = R.VALUE
WHERE L.VALUE IS NULL

L ∪ R - L ∩ R
FROM L
FULL OUTER JOIN R ON L.VALUE = R.VALUE
WHERE L.VALUE IS NULL OR R.VALUE IS NULL


# EMP 테이블에서 자신의 상급자 이름을 더해서 출력
SELECT E1.EMPNO, E1.ENAME, E1.JOB, E1.MGR, E2.ENAME AS MGR_NAME, E1.HIREDATE, E1.SAL, E1.COMM, E1.DEPTNO 
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;

# SALGRADE 테이블의 SAL 등급을 반영해서 출력
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, S.GRADE AS SAL_GRADE, E.COMM, E.DEPTNO
FROM EMP E, SALGRADE S
WHERE E.SAL >= S.LOSAL AND E.SAL <= S.HISAL
ORDER BY E.EMPNO;

SELECT E.ENAME, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;



5. CROSS JOIN : 첫 번째 테이블과 두 번째 테이블의 모든 조합을 출력

6. SELF-JOIN : 자기 자신의 여러 ROW간 조인 연산을 수행한다.


- SQL-99 추가된 조인

1. NATURAL JOIN : 두 개 이상의 동일한 이름을 가진 열들 사이에서 자동으로 일치하는 열들을 결합한다.
SELECT *
FROM EMP
NATURAL JOIN SALGRADE; # ON 을 쓰지 않는다

SELECT E.EMPNO, E.ENAME, E.MGR, DEPTNO, D.DNAME, D.LOC # 공통된 열은 식별자를 앞에 붙이지 않고 입력 (<- DEPTNO)
FROM EMP E
NATURAL JOIN DEPT D;

SELECT절에서 조인 기준이 되는 column의 이름을 명시할 때 객체 이름을 붙이면 안된다.

2. USING 절 : 두 개 이상의 동일한 이름을 가진 열들 사이에서 자동으로 일치하는 열들을 결합한다.
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, DEPTNO, D.DNAME, D.LOC
FROM EMP E
JOIN DEPT D USING(DEPTNO)
ORDER BY DEPTNO, E.EMPNO;

3. ON 절 : 조건식들과 함께 결합할 열들을 직접 비교할 수 있다.

# SALGRADE - HISAL을 받는 사람의 인원 수를 등급별로 출력해보기
SELECT S.GRADE, COUNT(*) AS TOTLA_COUNT
FROM EMP E, SALGRADE S
WHERE E.SAL = S.HISAL
GROUP BY S.GRADE
ORDER BY S.GRADE;

SELECT S.GRADE,
CASE
WHEN COUNT(E.SAL) = 0 THEN 0
ELSE COUNT(E.SAL)
END AS TOTAL_COUNT
FROM SALGRADE S
LEFT OUTER JOIN EMP E ON E.SAL = S.HISAL
GROUP BY S.GRADE
ORDER BY S.GRADE;

# EMP 테이블에서 DEPT 테이블과 공통된 'DEPT' 값을 가지지 않은 부서 이름과 위치를 출력해보기
SELECT DEPT.DEPTNO, DEPT.DNAME, DEPT.LOC
FROM DEPT
FULL OUTER JOIN EMP ON DEPT.DEPTNO = EMP.DEPTNO
WHERE DEPT.DEPTNO IS NULL OR EMP.DEPTNO IS NULL;

# EMP와 DEPT 결합해서 JOB이 MANAGER인 애들 출력해보기
SELECT *
FROM EMP E
JOIN DEPT D USING(DEPTNO)
WHERE JOB = 'MANAGER'
ORDER BY E.EMPNO;
